bitcoin:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_bitcoin.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_bitcoin.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address, type, sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC

bitcoin_cash:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_bitcoin_cash.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_bitcoin_cash.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address, type, sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC

cardano:
    SELECT *    
    FROM
    (
        WITH blocks AS (
          SELECT
          slot_no AS block_number,
          block_time
          FROM `iog-data-analytics.cardano_mainnet.block`
          WHERE block_time < "{{timestamp}}"
        ),
        OUTPUTS AS (
          SELECT
          slot_no as output_slot_number,
          CAST(JSON_VALUE(a, '$.out_address') AS STRING) AS address,
          CAST(JSON_VALUE(a, '$.out_idx') AS INT64) as out_idx,
          CAST(JSON_VALUE(a, '$.out_value') AS INT64 ) AS value
          FROM `iog-data-analytics.cardano_mainnet.vw_tx_in_out_with_inputs_value`
          JOIN blocks ON block_number = slot_no
          JOIN UNNEST(JSON_QUERY_ARRAY(outputs)) AS a
        ),
        INPUTS AS (
          SELECT
          address,
          CAST(JSON_VALUE(i, '$.out_value') AS INT64 ) AS value
          FROM `iog-data-analytics.cardano_mainnet.vw_tx_in_out_with_inputs_value`
          JOIN OUTPUTS ON slot_no = output_slot_number
          JOIN UNNEST(JSON_QUERY_ARRAY(inputs)) AS i ON CAST(JSON_VALUE(i, '$.in_idx') AS INT64) = OUTPUTS.out_idx
        ),
        INCOMING AS (
          SELECT address, SUM(CAST(value AS numeric)) as sum_incoming -- cast numeric to avoid integer overflow in sum aggregation
          FROM INPUTS
          GROUP BY address
        ),
        OUTGOING AS (
          SELECT address, SUM(CAST(value AS numeric)) as sum_outgoing
          FROM OUTPUTS
          GROUP BY address
        )
        SELECT i.address, i.sum_incoming - o.sum_outgoing AS balance
        FROM INCOMING AS i
        JOIN OUTGOING AS o ON i.address = o.address
    )
    WHERE balance > 0
    ORDER BY balance DESC

dash:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_dash.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_dash.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address,   type,   sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC

dogecoin:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_dogecoin.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_dogecoin.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address,   type,   sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC

ethereum:
    WITH double_entry_book AS (
        SELECT to_address as address, value AS value
        FROM `bigquery-public-data.crypto_ethereum.traces`
        WHERE to_address IS NOT null
        AND status = 1
        AND (call_type NOT IN ('delegatecall', 'callcode', 'staticcall') OR call_type IS null)
        AND block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT from_address as address, -value AS value
        FROM `bigquery-public-data.crypto_ethereum.traces`
        WHERE from_address IS NOT null
        AND status = 1
        AND (call_type NOT IN ('delegatecall', 'callcode', 'staticcall') OR call_type IS null)
        AND block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT miner AS address, sum(cast(receipt_gas_used as numeric) * cast(gas_price as numeric)) AS value
        FROM `bigquery-public-data.crypto_ethereum.transactions` AS transactions
        JOIN `bigquery-public-data.crypto_ethereum.blocks` AS blocks on blocks.number = transactions.block_number
        WHERE transactions.block_timestamp < "{{timestamp}}"
        GROUP BY blocks.miner
        UNION ALL
        SELECT from_address AS address, -(cast(receipt_gas_used as numeric) * cast(gas_price as numeric)) AS value
        FROM `bigquery-public-data.crypto_ethereum.transactions`
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address, sum(value) AS balance
    FROM double_entry_book
    GROUP BY address
    HAVING balance > 0
    ORDER BY balance DESC

litecoin:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_litecoin.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_litecoin.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address,   type,   sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC

tezos:
    WITH double_entry_book as (
        SELECT IF(kind = 'contract', contract, delegate) AS address, change AS value
        FROM `public-data-finance.crypto_tezos.balance_updates`
        WHERE (status IS NULL OR status = 'applied') AND (timestamp < "{{timestamp}}")
        UNION ALL
        SELECT address, balance_change
        FROM `public-data-finance.crypto_tezos.migrations`
        WHERE timestamp < "{{timestamp}}"
    )
    SELECT address, SUM(value) AS balance
    FROM double_entry_book
    GROUP BY address
    HAVING balance > 0
    ORDER BY balance DESC

zcash:
    WITH double_entry_book AS (
        SELECT array_to_string(inputs.addresses, ",") as address, inputs.type, -inputs.value as value
        FROM `bigquery-public-data.crypto_zcash.inputs` as inputs
        WHERE block_timestamp < "{{timestamp}}"
        UNION ALL
        SELECT array_to_string(outputs.addresses, ",") as address, outputs.type, outputs.value as value
        FROM `bigquery-public-data.crypto_zcash.outputs` as outputs
        WHERE block_timestamp < "{{timestamp}}"
    )
    SELECT address,   type,   sum(value) as balance
    FROM double_entry_book
    GROUP BY 1,2
    HAVING balance > 0
    ORDER BY balance DESC
